@page "/Settings"
@attribute [Authorize]

@inject AuthService MyAuthService
@inject NavigationManager MyNavigationManager
@inject ConduitService MyConduitService

<div class="settings-page">
    <div class="container page">
        <div class="row">

            <div class="col-md-6 offset-md-3 col-xs-12">
                <h1 class="text-xs-center">Your Settings</h1>

                <EditForm Model="@SettingsInfo" OnValidSubmit="@UpdateUserInfo">
                    <div class="error-messages">
                        <ValidationSummary />
                    </div>
                    <fieldset>
                        <fieldset class="form-group">
                            <InputText @bind-Value="SettingsInfo.Image" class="form-control" type="text" placeholder="URL of profile picture" />
                        </fieldset>
                        <fieldset class="form-group">
                            <InputText @bind-Value="SettingsInfo.Username" class="form-control form-control-lg" type="text" placeholder="Your Name" />
                        </fieldset>
                        <fieldset class="form-group">
                            <InputTextArea @bind-Value="SettingsInfo.Bio" class="form-control form-control-lg" rows="8" placeholder="Short bio about you" />
                        </fieldset>
                        <fieldset class="form-group">
                            <InputText @bind-Value="SettingsInfo.Email" class="form-control form-control-lg" type="text" placeholder="Email" />
                        </fieldset>
                        <fieldset class="form-group">
                            <InputText @bind-Value="SettingsInfo.Password" class="form-control form-control-lg" type="password" placeholder="New Password" />
                        </fieldset>
                        <button type="submit" class="btn btn-lg btn-primary pull-xs-right" disabled="@(IsSubmitting)">
                            Update Settings
                        </button>
                    </fieldset>

                    <DataAnnotationsValidator />
                    <ServerValidator @ref="ServerValidator" />
                </EditForm>

                <hr />
                <button class="btn btn-outline-danger" @onclick="LogoutUser">Or click here to logout</button>
            </div>

        </div>
    </div>
</div>

@code {

    bool IsSubmitting = false;
    Models.Settings SettingsInfo = new Models.Settings();
    private ServerValidator ServerValidator;


    protected override async Task OnInitializedAsync()
    {
        var userInfo = await MyConduitService.GetCurrentUser();
        SettingsInfo.Image = userInfo.Image;
        SettingsInfo.Username = userInfo.Username;
        SettingsInfo.Bio = userInfo.Bio;
        SettingsInfo.Email = userInfo.Email;
    }

    async Task LogoutUser()
    {

        await MyAuthService.LogUserOut();
        MyNavigationManager.NavigateTo($"/");
    }

    async Task UpdateUserInfo()
    {
        ServerValidator.ClearErrors();

        IsSubmitting = true;

        var updateResult = await MyConduitService.UpdateUser(SettingsInfo);

        IsSubmitting = false;

        if (updateResult.Success)
        {
            // Update app identity for user with new information so that their username and image claims are updated
            await MyAuthService.SetupUserIdentity(updateResult.ReponseObject);
            MyNavigationManager.NavigateTo($"/");
        }
        else if (updateResult.Errors?.Any() ?? false)
        {
            ServerValidator.DisplayErrors(updateResult.Errors);
        }
        else
        {
            ServerValidator.DisplayError(string.Empty, "Your request could not be processed");
        }
    }
}